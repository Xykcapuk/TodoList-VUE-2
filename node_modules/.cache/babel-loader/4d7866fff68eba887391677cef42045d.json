{"remainingRequest":"C:\\Projects\\hello-world-master\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\hello-world-master\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\hello-world-master\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\hello-world-master\\src\\pages\\todoListPage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\hello-world-master\\src\\pages\\todoListPage.vue","mtime":1625075543258},{"path":"C:\\Projects\\hello-world-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\hello-world-master\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Projects\\hello-world-master\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\hello-world-master\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc2VhcmNoLmpzIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGRheWpzIGZyb20gJ2RheWpzJzsKaW1wb3J0IGxvY2Fsc3RvcmFnZSBmcm9tICdsb2NhbC1zdG9yYWdlJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJ0b2RvTGlzdFBhZ2UiLAogIGVsZTogJyNhcHAnLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0RGF0ZTogJycsCiAgICAgIHRleHRJbnB1dDogJycsCiAgICAgIHRleHRFZGl0RGF0ZTogJycsCiAgICAgIHRleHRFZGl0VGV4dDogJycsCiAgICAgIGluZGV4RWRpdDogbnVsbCwKICAgICAgZmlsdGVyRGF0ZTogJycsCiAgICAgIHNlbGVjdGVkOiAnJywKICAgICAgc2VhcmNoOiAnJywKICAgICAgbGlzdDogW10KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB2YWxpZGF0ZUZpZWxkczogZnVuY3Rpb24gdmFsaWRhdGVGaWVsZHMoKSB7CiAgICAgIHJldHVybiB0aGlzLnRleHRJbnB1dCA9PT0gJycgfHwgdGhpcy50ZXh0RGF0ZSA9PT0gJyc7CiAgICB9LAogICAgYWRkOiBmdW5jdGlvbiBhZGQoKSB7CiAgICAgIHRoaXMubGlzdC5wdXNoKHsKICAgICAgICBjaGVjazogZmFsc2UsCiAgICAgICAgZGF0ZTogdGhpcy50ZXh0RGF0ZSwKICAgICAgICB0ZXh0OiB0aGlzLnRleHRJbnB1dAogICAgICB9KTsKICAgICAgbG9jYWxzdG9yYWdlLnNldCgnbGlzdCcsIHRoaXMubGlzdCk7CiAgICAgIHRoaXMudGV4dElucHV0ID0gJyc7CiAgICB9LAogICAgY2xlYXI6IGZ1bmN0aW9uIGNsZWFyKCkgewogICAgICB0aGlzLmxpc3QgPSBbXTsKICAgICAgbG9jYWxzdG9yYWdlLnNldCgnbGlzdCcsIHRoaXMubGlzdCk7CiAgICB9LAogICAgZWRpdDogZnVuY3Rpb24gZWRpdChpbmRleCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdGhpcy5pbmRleEVkaXQgPSBpbmRleDsKICAgICAgdGhpcy50ZXh0RWRpdERhdGUgPSB0aGlzLmxpc3RbaW5kZXhdLmRhdGU7CiAgICAgIHRoaXMudGV4dEVkaXRUZXh0ID0gdGhpcy5saXN0W2luZGV4XS50ZXh0OwogICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgX3RoaXMuJHJlZnMuZm9jdXNJbnB1dFswXS5mb2N1cygpOwogICAgICB9KTsKICAgIH0sCiAgICBzYXZlOiBmdW5jdGlvbiBzYXZlKCkgewogICAgICB0aGlzLmxpc3RbdGhpcy5pbmRleEVkaXRdLmRhdGUgPSB0aGlzLnRleHRFZGl0RGF0ZTsKICAgICAgdGhpcy5saXN0W3RoaXMuaW5kZXhFZGl0XS50ZXh0ID0gdGhpcy50ZXh0RWRpdFRleHQ7CiAgICAgIHRoaXMuaW5kZXhFZGl0ID0gbnVsbDsKICAgIH0sCiAgICBlc2M6IGZ1bmN0aW9uIGVzYygpIHsKICAgICAgdGhpcy5pbmRleEVkaXQgPSBudWxsOwogICAgfSwKICAgIGZvcm1hdERhdGU6IGZ1bmN0aW9uIGZvcm1hdERhdGUoZGF0ZSkgewogICAgICByZXR1cm4gZGF5anMoZGF0ZSkuZm9ybWF0KCdERC5NTS5ZWVlZJyk7CiAgICB9LAogICAgZGVsOiBmdW5jdGlvbiBkZWwoaW5kZXgpIHsKICAgICAgdGhpcy5saXN0LnNwbGljZShpbmRleCwgMSk7CiAgICAgIGxvY2Fsc3RvcmFnZS5zZXQoJ2xpc3QnLCB0aGlzLmxpc3QpOwogICAgfSwKICAgIGNoZWNrZWQ6IGZ1bmN0aW9uIGNoZWNrZWQoKSB7CiAgICAgIC8vIHRoaXMubGlzdFtpbmRleF0uY2hlY2sgPSAhdGhpcy5saXN0W2luZGV4XS5jaGVjawogICAgICBsb2NhbHN0b3JhZ2Uuc2V0KCdsaXN0JywgdGhpcy5saXN0KTsKICAgIH0sCiAgICBmaWx0ZXJMaXN0OiBmdW5jdGlvbiBmaWx0ZXJMaXN0KCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMubGlzdCA9IHRoaXMubGlzdC5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZWxlbWVudC5kYXRlID09PSBfdGhpczIuZmlsdGVyRGF0ZTsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHRoaXMuZmlsdGVyRGF0ZSk7CiAgICB9LAogICAgZ2V0TGlzdExvY2FsOiBmdW5jdGlvbiBnZXRMaXN0TG9jYWwoKSB7CiAgICAgIHZhciBkYXRhID0gbG9jYWxzdG9yYWdlLmdldCgnbGlzdCcpOwogICAgICBpZiAoZGF0YSAhPT0gbnVsbCAmJiBBcnJheS5pc0FycmF5KGRhdGEpKSB0aGlzLmxpc3QgPSBsb2NhbHN0b3JhZ2UuZ2V0KCdsaXN0Jyk7CiAgICB9LAogICAgcmVzZXQ6IGZ1bmN0aW9uIHJlc2V0KCkgewogICAgICB0aGlzLmdldExpc3RMb2NhbCgpOwogICAgfSwKICAgIHNvcnRMaXN0OiBmdW5jdGlvbiBzb3J0TGlzdCgpIHsKICAgICAgdmFyIHNvcnRPcHRpb24gPSBmdW5jdGlvbiBzb3J0T3B0aW9uKGEsIGIpIHsKICAgICAgICByZXR1cm4gbmV3IERhdGUoYS5kYXRlKSAtIG5ldyBEYXRlKGIuZGF0ZSk7CiAgICAgIH07CgogICAgICBpZiAodGhpcy5zZWxlY3RlZCA9PT0gJ0FiJykgdGhpcy5saXN0ID0gdGhpcy5saXN0LnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gc29ydE9wdGlvbihhLCBiKTsKICAgICAgfSk7CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkID09PSAnWnknKSB0aGlzLmxpc3QgPSB0aGlzLmxpc3Quc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgIHJldHVybiBzb3J0T3B0aW9uKGIsIGEpOwogICAgICB9KTsKICAgIH0sCiAgICBzZWFyY2hMaW5lOiBmdW5jdGlvbiBzZWFyY2hMaW5lKCkgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBidWYgPSBsb2NhbHN0b3JhZ2UuZ2V0KCdsaXN0Jyk7CiAgICAgIHRoaXMubGlzdCA9IGJ1Zi5maWx0ZXIoZnVuY3Rpb24gKGVsZW1lbnQpIHsKICAgICAgICByZXR1cm4gZWxlbWVudC50ZXh0ID09PSBfdGhpczMuc2VhcmNoOwogICAgICB9KTsKICAgICAgaWYgKHRoaXMuc2VhcmNoID09PSAnJykgdGhpcy5saXN0ID0gYnVmOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuZ2V0TGlzdExvY2FsKCk7CiAgfQp9Ow=="},{"version":3,"sources":["todoListPage.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <input type=\"date\" v-model=\"filterDate\" @change=\"filterList()\">\n    <select v-model=\"selected\" @change=\"sortList()\">\n      <option disabled value=\"\">Выберите вариант сортировки</option>\n      <option value=\"Ab\">От старых к новым</option>\n      <option value=\"Zy\">От новых к старым</option>\n    </select>\n    <button @click=\"reset()\">Сбросить</button>\n    <input v-model=\"search\" @input=\"searchLine()\"/>\n    <div class=\"input\">\n      <input type=\"date\" v-model=\"textDate\">\n      <input v-model=\"textInput\"/>\n      <button :disabled =\"validateFields()\" @click=\"add()\">Добавить запись</button>\n      <p v-if=\"validateFields()\">Чтобы добавить запись, заполните все поля</p>\n      <button :disabled =\"list.length === 0\" @click=\"clear()\">Удалить весь список</button>\n    </div>\n    <ul v-if=\"list.length\">\n      <li v-for=\"(item, index) in list\" :key=\"index\" :class=\"{'completed': item.check}\">\n       <input type=\"checkbox\" v-model=\"item.check\" @change=\"checked(index)\"/>\n          <div v-if=\"indexEdit === index\" @keyup.esc=\"esc()\" @keyup.enter=\"save(index)\">\n            <input type=\"date\" v-model=\"textEditDate\"/>\n            <input v-model=\"textEditText\" ref=\"focusInput\"/>\n            <button @click=\"save(index)\">Сохранить</button>\n          </div>\n          <div v-else>\n            {{ formatDate(item.date) }} {{ item.text }}\n            <button @click=\"edit(index)\" :disabled=\"item.check\">Редактировать</button>\n          </div>\n          <div>\n            <button @click=\"del(index)\">Удалить строку</button>\n          </div>\n      </li>\n    </ul>\n    <p v-else>\n      Записей нет!!!\n    </p>\n  </div>\n</template>\n\n<script>\nimport dayjs from 'dayjs'\nimport localstorage from 'local-storage'\n\nexport default {\n  name: \"todoListPage\",\n  ele: '#app',\n  data () {\n    return {\n      textDate: '',\n      textInput: '',\n      textEditDate: '',\n      textEditText: '',\n      indexEdit: null,\n      filterDate: '',\n      selected: '',\n      search: '',\n      list: [\n      ]\n    }\n  },\n  methods: {\n    validateFields() {\n      return this.textInput === '' || this.textDate === ''\n    },\n    add() {\n      this.list.push({\n        check: false,\n        date: this.textDate,\n        text: this.textInput\n      })\n      localstorage.set('list', this.list)\n      this.textInput = ''\n    },\n    clear() {\n      this.list = []\n      localstorage.set('list', this.list)\n    },\n    edit(index) {\n      this.indexEdit = index\n      this.textEditDate = this.list[index].date\n      this.textEditText = this.list[index].text\n      this.$nextTick(() => {\n        this.$refs.focusInput[0].focus()\n      })\n    },\n    save() {\n      this.list[this.indexEdit].date = this.textEditDate\n      this.list[this.indexEdit].text = this.textEditText\n      this.indexEdit = null\n    },\n    esc() {\n      this.indexEdit = null\n    },\n    formatDate(date) {\n      return dayjs(date).format('DD.MM.YYYY')\n    },\n    del(index) {\n      this.list.splice(index, 1)\n      localstorage.set('list', this.list)\n    },\n    checked() {\n      // this.list[index].check = !this.list[index].check\n      localstorage.set('list', this.list)\n    },\n    filterList() {\n      this.list = this.list.filter(element => element.date === this.filterDate)\n      console.log(this.filterDate)\n    },\n    getListLocal() {\n      const data = localstorage.get('list')\n      if (data !== null && Array.isArray(data))\n        this.list = localstorage.get('list')\n    },\n    reset() {\n      this.getListLocal()\n    },\n    sortList() {\n      const sortOption = (a,b) => { return new Date(a.date) - new Date(b.date) }\n      if (this.selected === 'Ab')\n        this.list = this.list.sort((a, b) => sortOption(a,b)) ;\n      if (this.selected === 'Zy')\n        this.list = this.list.sort((a, b) => sortOption(b,a));\n    },\n    searchLine() {\n      const buf = localstorage.get('list')\n      this.list = buf.filter(element => element.text === this.search)\n      if (this.search === '') this.list = buf\n    }\n  },\n  mounted() {\n    this.getListLocal()\n  }\n}\n</script>\n\n<style scoped>\n  .completed {\n    text-decoration: line-through;\n  }\n</style>"],"sourceRoot":"src/pages"}]}